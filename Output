Started by user Tarun
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/job4
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Clone GitHub Repository)
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/Tarun-007-tech/ecr3.git
 > git init /var/lib/jenkins/workspace/job4 # timeout=10
Fetching upstream changes from https://github.com/Tarun-007-tech/ecr3.git
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
 > git fetch --tags --force --progress -- https://github.com/Tarun-007-tech/ecr3.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/Tarun-007-tech/ecr3.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 7be7d############ (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 7be7d86cb########### # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b main 7be7d86cb0########## # timeout=10
Commit message: "Update Dockerfile"
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Login to Amazon ECR)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ aws ecr get-login-password --region ap-southeast-2
+ aws sts get-caller-identity --query Account --output text
+ docker login --username AWS --password-stdin 692#######.dkr.ecr.ap-southeast-2.amazonaws.com
WARNING! Your password will be stored unencrypted in /var/lib/jenkins/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credential-stores

Login Succeeded
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Docker Image)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ docker build -t proje######:latest .
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 69B 0.0s done
#1 DONE 0.1s

#2 [internal] load metadata for docker.io/library/ubuntu:latest
#2 DONE 1.7s

#3 [internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [1/1] FROM docker.io/library/ubuntu:latest@sha256:99c35190e22d294cdace2783ac55effc69d32896daaa265f0bbedbcde4fbe3e5
#4 CACHED

#5 exporting to image
#5 exporting layers done
#5 writing image sha256:aa414a497f4629284b164b1d9459055cf93df803d94b7######### 0.0s done
#5 naming to docker.io/library/project1repo:latest 0.0s done
#5 DONE 0.0s
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Tag and Push Docker Image to ECR)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ aws sts get-caller-identity --query Account --output text
[Pipeline] sh
+ docker tag project1repo:latest 69285#######.dkr.ecr.ap-southeast-2.amazonaws.com/project1repo:latest
[Pipeline] sh
+ docker push 6928########.dkr.ecr.ap-southeast-2.amazonaws.com/project1repo:latest
The push refers to repository [6928#####.dkr.ecr.ap-southeast-2.amazonaws.com/project1repo]
a46a5####: Preparing
a46a5#####: Pushed
latest: digest: sha256:6fda6b59442faa325871f56e283436################# size: 529
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
